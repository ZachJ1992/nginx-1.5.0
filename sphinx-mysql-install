1. install cmake
   1) tar zxvf cmake.xxx.tar.gz
   2) cd cmake.xxx
   3) ./bootstrap
   4) make && make install
2. install mysql
   1) add a host configure, or will issue error when install mysql db 
       127.0.0.1       linux 
   2) tar zxvf mysql.xxx.tar.gz
   3) cd mysql.xxx
   4) cmake -DCMAKE_INSTALL_PREFIX=/usr/local/services/mysql \
            -DDEFAULT_CHARSET=utf8 \
            -DDEFAULT_COLLATION=utf8_general_ci
   5) make && make install
   6) configure, see mysql install dir's INSTALL-BINARY guide
   7) ./bin/mysqladmin -u root password  # set root original password
3. install mmseg

tar zxvf mmseg-3.2.14.tar.gz
cd mmseg-3.2.14
./bootstrap

./configure --prefix=/usr/local/services/mmseg3
make && make install


# simple test for mmseg3
/usr/local/services/mmseg3/bin/mmseg -d /usr/local/services/mmseg3/etc src/t1.txt

# test results here :
# 中文/x 分/x 词/x 测试/x
# 中国人/x 上海市/x
#
# Word Splite took: 0 ms.

4. install coreseek

tar zxvf coreseek-4.1-beta.tar.gz
cd coreseek-4.1-beta
cd csft-4.1

sh buildconf.sh
# add /usr/local/services/mysql/lib to /etc/ld.so.conf then ldconfig
# or there will be an error, when configure coreseek

./configure --prefix=/usr/local/services/coreseek  --with-mmseg --with-mmseg-includes=/usr/local/services/mmseg3/include/mmseg/ \
--with-mmseg-libs=/usr/local/services/mmseg3/lib/ --with-mysql=/usr/local/services/mysql

make && make install
5. add new mysql user hwtrip : hwtrip@2011
   GRANT ALL PRIVILEGES ON *.* TO 'hwtrip'@'%' IDENTIFIED BY 'hwtrip@2011' wITH GRANT OPTION;
   FLUSH PRIVILEGES;
   create database hwtrip2;
   use hwtrip2;
   source hwtrip.sql;

6. coreseek configuration
   copy a csft.conf to etc/
   
   indexer test :
       /usr/local/services/coreseek/bin/indexer -c /usr/local/services/coreseek/etc/csft.conf
       error : /usr/local/services/coreseek/bin/indexer: error while loading shared libraries: libmysqlclient.so.18: cannot open shared object file: No such file or directory
       resolve :
         64bit system : ln -s /usr/local/services/mysql/lib/libmysqlclient.so.18 /usr/lib64/libmysqlclient.so.18
         #32bit system : ln -s /usr/local/mysql/lib/libmysqlclient.so.18 /usr/lib/libmysqlclient.so.18
       retry again

7. cp mmseg source codes' data to mmseg install dir
   mmseg -u unigram.txt
   该命令执行后，将会在unigram.txt所在目录中产生一个名为unigram.txt.uni的文件，将该文件改名为uni.lib，完成词典的构造。需要注意的是，unigram.txt需要预先准备，并且编码格式必须为UTF-8编码。

8. test coreseek
   /usr/local/services/coreseek/bin/indexer -c /usr/local/services/coreseek/etc/csft.conf
   csft 4.x  Error : nothing to do is OK
   
   /usr/local/services/coreseek/bin/indexer -c /usr/local/services/coreseek/etc/csft.conf --all # index all



9. master and slave configuration
    1) configure master
    server-id=1
    log-bin=mysql-bin

    #server-id：为主服务器A的ID值
    #log-bin：二进制变更日值
    
    2) view master status 
    重启master，运行SHOW MASTER STATUS，输出如下
    
    3) configure slave
    Slave的配置与master类似，你同样需要重启slave的MySQL。如下：
    log_bin           = mysql-bin
    server_id         = 2
    relay_log         = mysql-relay-bin
    log_slave_updates = 1
    read_only         = 1

    server_id是必须的，而且唯一。slave没有必要开启二进制日志，但是在一些情况下，必须设置，
    例如，如果slave为其它slave的master，必须设置bin_log。
    在这里，我们开启了二进制日志，而且显示的命名(默认名称为hostname，但是，如果hostname改变则会出现问题)。

    relay_log配置中继日志，log_slave_updates表示slave将复制事件写进自己的二进制日志(后面会看到它的用处)。
    有些人开启了slave的二进制日志，却没有设置log_slave_updates，然后查看slave的数据是否改变，这是一种错误的配置。
    所以，尽量使用read_only，它防止改变数据(除了特殊的线程)。但是，read_only并是很实用，特别是那些需要在slave上创建表的应用。
    

    4) start slave
    CHANGE MASTER TO MASTER_HOST='10.86.5.31', MASTER_USER='backup', MASTER_PASSWORD='backup', MASTER_LOG_FILE='mysql-bin.000012', MASTER_LOG_POS=19168614;
    SHOW SLAVE STATUS\G


    START SLAVE;
    SHOW SLAVE STATUS\G

    5) master test : show processlist\G


    6) slave test : show processlist \G


    setup ok 
